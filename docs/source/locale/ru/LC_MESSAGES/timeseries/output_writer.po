# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2020 by Fraunhofer IEE and University of Kassel
# This file is distributed under the same license as the pandapower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandapower 2.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-09 17:13+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/timeseries/output_writer.rst:3
msgid "Output Writer"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:2
msgid ""
"The OutputWriter class is used to store and format specific outputs from "
"a time series calculation."
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:4
msgid ""
"It contains a python-dictionary *output* which is a container for result "
"DataFrames or arbitrary information you would like to store. By default a"
" pandas DataFrame is initialized for the key *Parameters*, which has the "
"columns \"time_step\", \"controller_unstable\", \"powerflow_failed\"."
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:8
msgid ""
"To simple log outputs during a time series simulation use "
"**ow.log_variable(table, column)** where table is the name of the "
"(result) table, e.g. \"res_bus\", and column the name of the column, e.g."
" \"vm_pu\"."
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:11
msgid ""
"More sophisticated outputs can be added as well since for each value to "
"be stored a function is added to the *output_list* which is called at the"
" end of each time step. The function reads the calculation results and "
"returns the desired values to store. The function is expected to return "
"scalar value by default. If more values are returned, the function should"
" have \"n_columns\" as a paramter (see example below for logging of cost "
"function values). These values are then stored in the *output* DataFrame "
"in a column named after the function you implemented. Such a function can"
" be used to store only some information of the power flow results, like "
"the highest values of the line loading in a time step or the mean values."
" Check the \"advanced time series example\" jupyter notebook for an "
"example."
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:24
msgid "INPUT:"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:22
msgid "**net** - The pandapower format network"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:24
msgid "**time_steps** (list) - time_steps to calculate as a list (or range)"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:26
#: pandapower.timeseries.output_writer.OutputWriter.log_variable:9
msgid "OPTIONAL:"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:28
msgid ""
"**output_path** (string, None) - Path to a folder where the output is "
"written to."
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:30
msgid ""
"**output_file_type** (string, \".p\") - output filetype to use. Allowed "
"file extensions: [*.xls, *.xlsx, *.csv, *.p, *.json] Note: XLS has a "
"maximum number of 256 rows."
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:34
msgid ""
"**csv_separator** (string, \";\") - The separator used when writing to a "
"csv file"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:36
msgid ""
"**write_time** (int, None) - Time to save periodically to disk in "
"minutes. Deactivated by default"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:38
msgid ""
"**log_variables** (list, None) - list of tuples with (table, column) "
"values to  be logged by output writer. Defaults are: res_bus.vm_pu and "
"res_line.loading_percent. Additional variables can be added later on with"
" ow.log_variable or removed with ow.remove_log_variable"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter:66
#: pandapower.timeseries.output_writer.OutputWriter.log_variable:44
msgid "EXAMPLE:"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.dump_to_file:2
msgid ""
"Save the output to separate files in output_path with the file_type "
"output_file_type. This is called after the time series simulation by "
"default."
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.dump_to_file:5
msgid ""
"**append** (bool, False) - Option for appending instead of overwriting "
"the file"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.init_log_variables:2
msgid ""
"inits the log variables given to output writer. log_variables is a list "
"with tuples of DataFrame columns to log. Example: [(\"res_bus\", "
"\"vm_pu\"), (\"res_bus\", \"va_degree\")]"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.init_log_variables:6
msgid "If None are given the defaults are: res_bus.vm_pu res_line.loading_percent"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.log_variable:2
msgid ""
"Adds a variable to log during simulation and appends it to output_list. "
"INPUT:"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.log_variable:5
msgid ""
"**table** (str) - The DataFrame table where the variable is located as a "
"string (e.g. \"res_bus\")"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.log_variable:7
msgid ""
"**variable** (str) -  variable that should be logged as string (e.g. "
"\"p_mw\")"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.log_variable:11
msgid ""
"**index** (iterable, None) - Can be either one index or a list of "
"indices, or a numpy array of indices, or a pandas Index, or a pandas "
"Series (e.g. net.load.bus) for which the variable will be logged. If no "
"index is given, the variable will be logged for all elements in the table"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.log_variable:15
msgid ""
"**eval_function** (function, None) - A function to be applied on the "
"table / variable / index combination. example: pd.min or pd.mean"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.log_variable:20
msgid ""
"**eval_name** (str, None) - The name for an applied function. It *must* "
"be unique."
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.log_variable:19
msgid ""
"If the name is None the name consists of the table, variable, index and "
"eval function example: \"max_load_p_mw_values\""
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.log_variable:27
msgid ""
"# Getting the cost function slope for each time step: >>> def "
"cost_logging(result, n_columns=2): >>>      return array([result[i][0][2]"
" for i in range(len(result))]) >>> ow.log_variable(\"pwl_cost\", "
"\"points\", eval_function=cost_logging)"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.remove_log_variable:2
msgid "removes a logged variable from outputs"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.remove_log_variable:4
msgid ""
"INPUT: **table** (str) - name of the DataFrame table (example: "
"\"res_bus\")"
msgstr ""

#: of pandapower.timeseries.output_writer.OutputWriter.remove_log_variable:7
msgid ""
"OPTIONAL: **variable** (str, None) - column name of the DataFrame table "
"(example: \"vm_pu\"). If None all are variables of table are removed"
msgstr ""

