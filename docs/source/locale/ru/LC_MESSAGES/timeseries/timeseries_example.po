# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2020 by Fraunhofer IEE and University of Kassel
# This file is distributed under the same license as the pandapower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandapower 2.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-09 17:13+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/timeseries/timeseries_example.rst:5
msgid "Timeseries Example"
msgstr ""

#: ../../source/timeseries/timeseries_example.rst:8
msgid "Common Use Case"
msgstr ""

#: ../../source/timeseries/timeseries_example.rst:9
msgid ""
"A common use case is to add two :ref:`const controller <ConstControl>` to"
" the grid to update the P values of loads and static generators. The p_mw"
" values for each time step are stored in a data source, which is defined "
"by the class ``DataSource``. This class holds a pandas DataFrame which "
"contains the values for each element and time step. The :ref:`const "
"controller <ConstControl>` gets the data source, reads p_mw values from "
"it and writes the corresponding ones to each sgen / load prior to the "
"power flow calculation. After running the power flow calculation, results"
" for each time steps are written by the output writer class "
"``OutputWriter`` to excel, csv, json or pickle files."
msgstr ""

#: ../../source/timeseries/timeseries_example.rst:19
msgid "Simulating Time Series"
msgstr ""

#: ../../source/timeseries/timeseries_example.rst:20
msgid ""
"First you need a ``DataSource`` to store the p_mw values of sgens or "
"loads. For example multiple CSV-files can be used to provide the values "
"for each element and time step. Each column contains a profile with a "
"value for each time step in the corresponding row. Here is a schematic "
"example for a grid with N static generators and T time steps:"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "0"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "---"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "N-1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "N"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P0 sgen0"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P0 sgen1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P0 sgen N-1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P0 sgen N"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P1 sgen0"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P1 sgen1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P1 sgen N-1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P1 sgen N"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "2"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P2 sgen0"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P2 sgen1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P2 sgen N-1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P2 sgen N"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "T-1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P T-1 sgen0"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P T-1 sgen1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P T-1 sgen N-1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P T-1 sgen N"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "T"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P T sgen0"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P T sgen1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P T sgen N-1"
msgstr ""

#: ../../source/timeseries/datasource_example.csv:1
msgid "P T sgen N"
msgstr ""

#: ../../source/timeseries/timeseries_example.rst:29
msgid ""
"This structure is saved to a *.csv file and can be read by pandas and "
"passed to the DataSource constructor like so:"
msgstr ""

#: ../../source/timeseries/timeseries_example.rst:63
msgid ""
"We created a ``DataSource`` and passed it to the ``ConstControl``, while "
"also providing the name of the P-profile. To get the time series "
"calculation results and save it to separate files we build an "
"``OutputWriter``."
msgstr ""

#: ../../source/timeseries/timeseries_example.rst:77
msgid ""
"We created an ``OutputWriter`` and stored the voltage magnitude **vm_pu**"
" for each bus and the line loading in percent **loading_percent** for "
"every line to separate excel files."
msgstr ""

