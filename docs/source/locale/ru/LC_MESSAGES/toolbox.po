# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2020 by Fraunhofer IEE and University of Kassel
# This file is distributed under the same license as the pandapower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandapower 2.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-09 17:13+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/toolbox.rst:3
msgid "Toolbox"
msgstr ""

#: ../../source/toolbox.rst:5
msgid ""
"The pandapower toolbox is a collection of helper functions that are "
"implemented for the pandapower framework. It is designed for functions of"
" common application that fit nowhere else. Have a look at the available "
"functions to save yourself the effort of maybe implementing something "
"twice. If you develop some functionality which could be interesting to "
"other users as well and do not fit into one of the specialized packages, "
"feel welcome to add your contribution. To improve overview functions are "
"loosely grouped by functionality, please adhere to this notion when "
"adding your own functions and feel free to open new groups as needed."
msgstr ""

#: ../../source/toolbox.rst:13
msgid ""
"If you implement a function that might be useful for others, it is "
"mandatory to add a short docstring to make browsing the toolbox "
"practical. Ideally further comments if appropriate and a reference of "
"authorship should be added as well."
msgstr ""

#: ../../source/toolbox.rst:18
msgid "General Issues"
msgstr ""

#: of pandapower.toolbox.element_bus_tuples:2
msgid ""
"Utility function Provides the tuples of elements and corresponding "
"columns for buses they are connected to :param bus_elements: whether "
"tuples for bus elements e.g. load, sgen, ... are included :param "
"branch_elements: whether branch elements e.g. line, trafo, ... are "
"included :return: set of tuples with element names and column names"
msgstr ""

#: of pandapower.toolbox.pp_elements:2
msgid "Returns a set of pandapower elements."
msgstr ""

#: of pandapower.toolbox.pq_from_cosphi:2
msgid "Calculates P/Q values from rated apparent power and cosine(phi) values."
msgstr ""

#: of pandapower.toolbox.pq_from_cosphi:4
msgid "s: rated apparent power"
msgstr ""

#: of pandapower.toolbox.pq_from_cosphi:5
msgid "cosphi: cosine phi of the"
msgstr ""

#: of pandapower.toolbox.pq_from_cosphi:6
msgid "qmode: \"ind\" for inductive or \"cap\" for capacitive behaviour"
msgstr ""

#: of pandapower.toolbox.pq_from_cosphi:7
msgid "pmode: \"load\" for load or \"gen\" for generation"
msgstr ""

#: of pandapower.toolbox.pq_from_cosphi:9
msgid ""
"As all other pandapower functions this function is based on the consumer "
"viewpoint. For active power, that means that loads are positive and "
"generation is negative. For reactive power, inductive behaviour is "
"modeled with positive values, capacitive behaviour with negative values."
msgstr ""

#: of pandapower.toolbox.dataframes_equal:2
msgid "Returns a boolean whether the nets are equal or not."
msgstr ""

#: of pandapower.toolbox.compare_arrays:2
msgid ""
"Returns an array of bools whether array x is equal to array y. Strings "
"are allowed in x or y. NaN values are assumed as equal."
msgstr ""

#: of pandapower.toolbox.ensure_iterability:2
msgid "Ensures iterability of a variable (and optional length)."
msgstr ""

#: ../../source/toolbox.rst:36
msgid "Result Information"
msgstr ""

#: of pandapower.toolbox.lf_info:2
msgid ""
"Prints some basic information of the results in a net (max/min voltage, "
"max trafo load, max line load)."
msgstr ""

#: of pandapower.toolbox.create_continuous_bus_index:11
#: pandapower.toolbox.create_continuous_elements_index:12
#: pandapower.toolbox.get_connected_buses:21
#: pandapower.toolbox.get_connected_buses_at_element:17
#: pandapower.toolbox.get_connected_elements:15
#: pandapower.toolbox.get_connected_switches:16
#: pandapower.toolbox.get_element_index:14
#: pandapower.toolbox.get_element_indices:16 pandapower.toolbox.lf_info:5
#: pandapower.toolbox.reindex_elements:27
#: pandapower.toolbox.replace_ext_grid_by_gen:35
#: pandapower.toolbox.replace_gen_by_ext_grid:32
#: pandapower.toolbox.replace_gen_by_sgen:32
#: pandapower.toolbox.replace_impedance_by_line:29
#: pandapower.toolbox.replace_line_by_impedance:29
#: pandapower.toolbox.replace_sgen_by_gen:32
msgid "OPTIONAL:"
msgstr ""

#: of pandapower.toolbox.lf_info:7
msgid ""
"**numv** (integer, 1) - maximal number of printed maximal respectively "
"minimal voltages"
msgstr ""

#: of pandapower.toolbox.lf_info:9
msgid ""
"**numi** (integer, 2) - maximal number of printed maximal loading at "
"trafos or lines"
msgstr ""

#: of pandapower.toolbox.opf_task:2
msgid ""
"Collects some basic inforamtion of the optimal powerflow task und prints "
"them."
msgstr ""

#: of pandapower.toolbox.switch_info:2
msgid "Prints what buses and elements are connected by a certain switch."
msgstr ""

#: of pandapower.toolbox.overloaded_lines:2
msgid ""
"Returns the results for all lines with loading_percent > max_load or "
"None, if there are none."
msgstr ""

#: of pandapower.toolbox.violated_buses:2
msgid ""
"Returns all bus indices where vm_pu is not within min_vm_pu and max_vm_pu"
" or returns None, if there are none of those buses."
msgstr ""

#: of pandapower.toolbox.nets_equal:2
msgid ""
"Compares the DataFrames of two networks. The networks are considered "
"equal if they share the same keys and values, except of the 'et' (elapsed"
" time) entry which differs depending on runtime conditions and entries "
"stating with '_'."
msgstr ""

#: ../../source/toolbox.rst:54
msgid "Simulation Setup and Preparation"
msgstr ""

#: of pandapower.toolbox.add_column_from_node_to_elements:2
msgid ""
"Adds column data to elements, inferring them from the column data of "
"buses they are connected to."
msgstr ""

#: of pandapower.toolbox.add_column_from_element_to_elements:20
#: pandapower.toolbox.add_column_from_node_to_elements:17
#: pandapower.toolbox.create_continuous_bus_index:6
#: pandapower.toolbox.create_continuous_elements_index:6
#: pandapower.toolbox.get_connected_buses:7
#: pandapower.toolbox.get_connected_buses_at_element:13
#: pandapower.toolbox.get_connected_elements:9
#: pandapower.toolbox.get_connected_switches:7
#: pandapower.toolbox.get_element_index:9
#: pandapower.toolbox.get_element_indices:11
#: pandapower.toolbox.reindex_buses:22 pandapower.toolbox.reindex_elements:9
#: pandapower.toolbox.replace_ext_grid_by_gen:5
#: pandapower.toolbox.replace_gen_by_ext_grid:5
#: pandapower.toolbox.replace_gen_by_sgen:5
#: pandapower.toolbox.replace_sgen_by_gen:5
#: pandapower.toolbox.set_data_type_of_columns_to_default:8
msgid "INPUT:"
msgstr ""

#: of pandapower.toolbox.add_column_from_element_to_elements:6
#: pandapower.toolbox.add_column_from_node_to_elements:6
msgid "**net** (pandapowerNet) - the pandapower net that will be changed"
msgstr ""

#: of pandapower.toolbox.add_column_from_node_to_elements:8
msgid ""
"**column** (string) - name of column that should be copied from the bus "
"table to the element table"
msgstr ""

#: of pandapower.toolbox.add_column_from_node_to_elements:11
msgid ""
"**replace** (boolean) - if True, an existing column in the element table "
"will be overwritten"
msgstr ""

#: of pandapower.toolbox.add_column_from_node_to_elements:13
msgid ""
"**elements** (list) - list of elements that should get the column values "
"from the bus table"
msgstr ""

#: of pandapower.toolbox.add_column_from_node_to_elements:15
msgid ""
"**branch_bus** (list) - defines which bus should be considered for branch"
" elements. 'branch_bus' must have the length of 2. One entry must be "
"'from_bus' or 'to_bus', the other 'hv_bus' or 'lv_bus'"
msgstr ""

#: of pandapower.toolbox.add_column_from_element_to_elements:45
#: pandapower.toolbox.add_column_from_node_to_elements:34
#: pandapower.toolbox.get_element_indices:41
msgid "EXAMPLE:"
msgstr ""

#: of pandapower.toolbox.add_column_from_node_to_elements:20
msgid "compare to add_zones_to_elements()"
msgstr ""

#: of pandapower.toolbox.add_column_from_element_to_elements:2
msgid ""
"Adds column data to elements, inferring them from the column data of the "
"elements linked by the columns \"element\" and \"element_type\" or "
"\"et\"."
msgstr ""

#: of pandapower.toolbox.add_column_from_element_to_elements:8
msgid ""
"**column** (string) - name of column that should be copied from the "
"tables of the elements."
msgstr ""

#: of pandapower.toolbox.add_column_from_element_to_elements:10
msgid "**replace** (boolean) - if True, an existing column will be overwritten"
msgstr ""

#: of pandapower.toolbox.add_column_from_element_to_elements:12
msgid ""
"**elements** (list) - list of elements that should get the column values "
"from the linked element tables. If None, all elements with the columns "
"\"element\" and \"element_type\" or \"et\" are considered (these are "
"currently \"measurement\" and \"switch\")."
msgstr ""

#: of pandapower.toolbox.add_column_from_element_to_elements:16
msgid ""
"**continue_on_missing_column** (Boolean, True) - If False, a error will "
"be raised in case of an element table has no column 'column' although "
"this element is refered in 'elements'. E.g. 'measurement' is in "
"'elements' and in net.measurement is a trafo measurement but in net.trafo"
" there is no column 'name' although column=='name' - ni this case "
"'continue_on_missing_column' acts."
msgstr ""

#: of pandapower.toolbox.add_column_from_element_to_elements:23
msgid ""
"import pandapower as pp import pandapower.networks as pn net = "
"pn.create_cigre_network_mv() pp.create_measurement(net, \"i\", \"trafo\","
" 5, 3, 0, side=\"hv\") pp.create_measurement(net, \"i\", \"line\", 5, 3, "
"0, side=\"to\") pp.create_measurement(net, \"p\", \"bus\", 5, 3, 2) "
"print(net.measurement.name.values, net.switch.name.values) "
"pp.add_column_from_element_to_elements(net, \"name\", True) "
"print(net.measurement.name.values, net.switch.name.values)"
msgstr ""

#: of pandapower.toolbox.add_zones_to_elements:2
msgid ""
"Adds zones to elements, inferring them from the zones of buses they are "
"connected to."
msgstr ""

#: of pandapower.toolbox.reindex_buses:2
msgid ""
"Changes the index of net.bus and considers the new bus indices in all "
"other pandapower element tables."
msgstr ""

#: of pandapower.toolbox.create_continuous_bus_index:6
#: pandapower.toolbox.get_element_index:5
#: pandapower.toolbox.get_element_indices:6 pandapower.toolbox.reindex_buses:6
#: pandapower.toolbox.reindex_elements:5
msgid "**net** - pandapower network"
msgstr ""

#: of pandapower.toolbox.reindex_buses:8
msgid ""
"**bus_lookup** (dict) - the keys are the old bus indices, the values the "
"new bus indices"
msgstr ""

#: of pandapower.toolbox.create_continuous_bus_index:2
msgid ""
"Creates a continuous bus index starting at 'start' and replaces all "
"references of old indices by the new ones."
msgstr ""

#: of pandapower.toolbox.create_continuous_bus_index:9
#: pandapower.toolbox.create_continuous_elements_index:9
msgid "**start** - index begins with \"start\""
msgstr ""

#: of pandapower.toolbox.create_continuous_bus_index:11
msgid ""
"**store_old_index** - if True, stores the old index in "
"net.bus[\"old_index\"]"
msgstr ""

#: of pandapower.toolbox.create_continuous_bus_index:28
#: pandapower.toolbox.create_continuous_elements_index:29
#: pandapower.toolbox.get_connected_buses:38
#: pandapower.toolbox.get_connected_buses_at_element:34
#: pandapower.toolbox.get_connected_elements:32
#: pandapower.toolbox.get_connected_switches:33
#: pandapower.toolbox.get_element_index:31
#: pandapower.toolbox.get_element_indices:19
#: pandapower.toolbox.set_data_type_of_columns_to_default:25
msgid "OUTPUT:"
msgstr ""

#: of pandapower.toolbox.create_continuous_bus_index:14
msgid "**bus_lookup** - mapping of old to new index"
msgstr ""

#: of pandapower.toolbox.reindex_elements:2
msgid "Changes the index of net[element]."
msgstr ""

#: of pandapower.toolbox.reindex_elements:7
msgid "**element** (str) - name of the element table"
msgstr ""

#: of pandapower.toolbox.reindex_elements:9
msgid "**new_indices** (iterable) - list of new indices"
msgstr ""

#: of pandapower.toolbox.reindex_elements:12
msgid ""
"**old_indices** (iterable) - list of old/previous indices which will be "
"replaced. If None, all indices are considered."
msgstr ""

#: of pandapower.toolbox.create_continuous_elements_index:2
msgid ""
"Creating a continuous index for all the elements, starting at zero and "
"replaces all references of old indices by the new ones."
msgstr ""

#: of pandapower.toolbox.create_continuous_elements_index:6
#: pandapower.toolbox.set_data_type_of_columns_to_default:8
msgid "**net** - pandapower network with unodered indices"
msgstr ""

#: of pandapower.toolbox.create_continuous_elements_index:11
msgid ""
"**add_df_to_reindex** - by default all useful pandapower elements for "
"power flow will be selected. Customized DataFrames can also be considered"
" here."
msgstr ""

#: of pandapower.toolbox.create_continuous_elements_index:15
msgid "**net** - pandapower network with odered and continuous indices"
msgstr ""

#: of pandapower.toolbox.set_scaling_by_type:2
msgid ""
"Sets scaling of loads and/or sgens according to a dictionary mapping type"
" to a scaling factor. Note that the type-string is case sensitive. E.g. "
"scaling = {\"pv\": 0.8, \"bhkw\": 0.6}"
msgstr ""

#: of pandapower.toolbox.create_replacement_switch_for_branch
#: pandapower.toolbox.replace_zero_branches_with_switches
#: pandapower.toolbox.set_scaling_by_type
msgid "Parameters"
msgstr ""

#: of pandapower.toolbox.set_scaling_by_type:8
msgid "A dictionary containing a mapping from element type to"
msgstr ""

#: of pandapower.convert_format.convert_format:2
msgid ""
"Converts old nets to new format to ensure consistency. The converted net "
"is returned."
msgstr ""

#: of pandapower.toolbox.set_data_type_of_columns_to_default:2
msgid ""
"Overwrites dtype of DataFrame columns of PandapowerNet elements to "
"default dtypes defined in pandapower. The function \"convert_format\" "
"does that authomatically for nets saved with pandapower versions below "
"1.6. If this is required for versions starting with 1.6, it should be "
"done manually with this function."
msgstr ""

#: of pandapower.toolbox.set_data_type_of_columns_to_default:11
msgid ""
"No output; the net passed as input has pandapower-default dtypes of "
"columns in element tables."
msgstr ""

#: ../../source/toolbox.rst:78
msgid "Topology Modification"
msgstr ""

#: of pandapower.toolbox.close_switch_at_line_with_two_open_switches:2
msgid ""
"Finds lines that have opened switches at both ends and closes one of "
"them. Function is usually used when optimizing section points to prevent "
"the algorithm from ignoring isolated lines."
msgstr ""

#: of pandapower.toolbox.fuse_buses:2
msgid ""
"Reroutes any connections to buses in b2 to the given bus b1. Additionally"
" drops the buses b2, if drop=True (default)."
msgstr ""

#: of pandapower.toolbox.drop_buses:2
msgid ""
"Drops specified buses, their bus_geodata and by default drops all "
"elements connected to them as well."
msgstr ""

#: of pandapower.toolbox.drop_elements_at_buses:2
msgid "drop elements connected to given buses"
msgstr ""

#: of pandapower.toolbox.drop_trafos:2
msgid ""
"Deletes all trafos and in the given list of indices and removes any "
"switches connected to it."
msgstr ""

#: of pandapower.toolbox.drop_lines:2
msgid ""
"Deletes all lines and their geodata in the given list of indices and "
"removes any switches connected to it."
msgstr ""

#: of pandapower.toolbox.drop_duplicated_measurements:2
msgid ""
"Drops duplicated measurements at given set of buses. If buses is None, "
"all buses are considered."
msgstr ""

#: of pandapower.toolbox.set_element_status:2
msgid "Sets buses and all elements connected to them in or out of service."
msgstr ""

#: of pandapower.toolbox.set_isolated_areas_out_of_service:2
msgid ""
"Set all isolated buses and all elements connected to isolated buses out "
"of service."
msgstr ""

#: of pandapower.toolbox.drop_out_of_service_elements:2
msgid ""
"Drop all elements (including corresponding dataframes such as switches, "
"measurements, result tables, geodata) with \"in_service\" is False. Buses"
" that are connected to in-service branches are not deleted."
msgstr ""

#: of pandapower.toolbox.drop_inactive_elements:2
msgid ""
"Drops any elements not in service AND any elements connected to inactive "
"buses."
msgstr ""

#: of pandapower.toolbox.select_subnet:2
msgid ""
"Selects a subnet by a list of bus indices and returns a net with all "
"elements connected to them."
msgstr ""

#: of pandapower.toolbox.merge_nets:2
msgid ""
"Function to concatenate two nets into one data structure. All element "
"tables get new, continuous indizes in order to avoid duplicates."
msgstr ""

#: of pandapower.toolbox.create_replacement_switch_for_branch:2
msgid ""
"Creates a switch parallel to a branch, connecting the same buses as the "
"branch. The switch is closed if the branch is in service and open if the "
"branch is out of service. The in_service status of the original branch is"
" not affected and should be set separately, if needed."
msgstr ""

#: of pandapower.toolbox.create_replacement_switch_for_branch:7
#: pandapower.toolbox.replace_zero_branches_with_switches:5
msgid "pandapower network"
msgstr ""

#: of pandapower.toolbox.create_replacement_switch_for_branch:8
msgid "element table e. g. 'line', 'impedance'"
msgstr ""

#: of pandapower.toolbox.create_replacement_switch_for_branch:9
msgid "index of the branch e. g. 0"
msgstr ""

#: of pandapower.toolbox.create_replacement_switch_for_branch
#: pandapower.toolbox.replace_zero_branches_with_switches
msgid "Returns"
msgstr ""

#: of pandapower.toolbox.create_replacement_switch_for_branch:10
msgid "None"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:2
msgid ""
"Creates a replacement switch for branches with zero impedance (line, "
"impedance) and sets them out of service."
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:6
msgid "a tuple of names of element tables e. g. ('line', 'impedance') or (line)"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:7
msgid "whether zero length lines will be affected"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:8
msgid "whether zero impedance branches will be affected"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:9
msgid "whether the branches that are not in service will be affected"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:10
msgid "wheter the affected branch elements are dropped"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:11
msgid "threshhold for line length for a line to be considered zero line"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:12
msgid "threshhold for line R' value for a line to be considered zero line"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:13
msgid "threshhold for line X' value for a line to be considered zero line"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:14
msgid "threshhold for line C' for a line to be considered zero line"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:15
msgid ""
"threshhold for R from-to value for impedance to be considered zero "
"impedance"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:16
msgid ""
"threshhold for X from-to value for impedance to be considered zero "
"impedance"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:17
msgid ""
"threshhold for R to-from value for impedance to be considered zero "
"impedance"
msgstr ""

#: of pandapower.toolbox.replace_zero_branches_with_switches:18
msgid ""
"threshhold for X to-from value for impedance to be considered zero "
"impedance"
msgstr ""

#: of pandapower.toolbox.replace_impedance_by_line:2
msgid ""
"Creates lines by given impedances data, while the impedances are dropped."
" INPUT:"
msgstr ""

#: of pandapower.toolbox.replace_ext_grid_by_gen:5
#: pandapower.toolbox.replace_gen_by_ext_grid:5
#: pandapower.toolbox.replace_gen_by_sgen:5
#: pandapower.toolbox.replace_impedance_by_line:4
#: pandapower.toolbox.replace_line_by_impedance:4
#: pandapower.toolbox.replace_sgen_by_gen:5
msgid "**net** - pandapower net"
msgstr ""

#: of pandapower.toolbox.replace_impedance_by_line:7
msgid ""
"**index** (index, None) - Index of all impedances to be replaced. If "
"None, all impedances will be replaced."
msgstr ""

#: of pandapower.toolbox.replace_impedance_by_line:10
msgid ""
"**only_valid_replace** (bool, True) - If True, impedances will only "
"replaced, if a replacement leads to equal power flow results. If False, "
"unsymmetric impedances will be replaced by symmetric lines."
msgstr ""

#: of pandapower.toolbox.replace_impedance_by_line:14
msgid ""
"**max_i_ka** (value(s), False) - Data/Information how to set max_i_ka. If"
" 'imp.sn_mva' is given, the sn_mva values of the impedances are "
"considered."
msgstr ""

#: of pandapower.toolbox.replace_line_by_impedance:2
msgid ""
"Creates impedances by given lines data, while the lines are dropped. "
"INPUT:"
msgstr ""

#: of pandapower.toolbox.replace_line_by_impedance:7
msgid ""
"**index** (index, None) - Index of all lines to be replaced. If None, all"
" lines will be replaced."
msgstr ""

#: of pandapower.toolbox.replace_line_by_impedance:10
msgid ""
"**sn_kva** (list or array, None) - Values of sn_kva for creating the "
"impedances. If None, the net.sn_kva is assumed"
msgstr ""

#: of pandapower.toolbox.replace_line_by_impedance:13
msgid ""
"**only_valid_replace** (bool, True) - If True, lines will only replaced, "
"if a replacement leads to equal power flow results. If False, capacitance"
" and dielectric conductance will be neglected."
msgstr ""

#: of pandapower.toolbox.replace_ext_grid_by_gen:2
msgid "Replaces external grids by generators."
msgstr ""

#: of pandapower.toolbox.replace_ext_grid_by_gen:8
msgid ""
"**ext_grids** (iterable) - indices of external grids which should be "
"replaced"
msgstr ""

#: of pandapower.toolbox.replace_ext_grid_by_gen:10
#: pandapower.toolbox.replace_sgen_by_gen:10
msgid "**gen_indices** (iterable) - required indices of new generators"
msgstr ""

#: of pandapower.toolbox.replace_ext_grid_by_gen:12
msgid ""
"**slack** (bool, False) - indicates which value is set to net.gen.slack "
"for the new generators"
msgstr ""

#: of pandapower.toolbox.replace_ext_grid_by_gen:15
msgid ""
"**cols_to_keep** (list, None) - list of column names which should be kept"
" while replacing ext_grids. If None these columns are kept if values "
"exist: \"max_p_mw\", \"min_p_mw\", \"max_q_mvar\", \"min_q_mvar\". "
"However cols_to_keep is given, these columns are alway set: \"bus\", "
"\"vm_pu\", \"p_mw\", \"name\", \"in_service\", \"controllable\""
msgstr ""

#: of pandapower.toolbox.replace_ext_grid_by_gen:20
msgid ""
"**add_cols_to_keep** (list, None) - list of column names which should be "
"added to 'cols_to_keep' to be kept while replacing ext_grids."
msgstr ""

#: of pandapower.toolbox.replace_gen_by_ext_grid:2
msgid "Replaces generators by external grids."
msgstr ""

#: of pandapower.toolbox.replace_gen_by_ext_grid:8
#: pandapower.toolbox.replace_gen_by_sgen:8
msgid "**gens** (iterable) - indices of generators which should be replaced"
msgstr ""

#: of pandapower.toolbox.replace_gen_by_ext_grid:10
msgid "**ext_grid_indices** (iterable) - required indices of new external grids"
msgstr ""

#: of pandapower.toolbox.replace_gen_by_ext_grid:12
msgid ""
"**cols_to_keep** (list, None) - list of column names which should be kept"
" while replacing gens. If None these columns are kept if values exist: "
"\"max_p_mw\", \"min_p_mw\", \"max_q_mvar\", \"min_q_mvar\". However "
"cols_to_keep is given, these columns are alway set: \"bus\", \"vm_pu\", "
"\"va_degree\", \"name\", \"in_service\""
msgstr ""

#: of pandapower.toolbox.replace_gen_by_ext_grid:17
#: pandapower.toolbox.replace_gen_by_sgen:17
msgid ""
"**add_cols_to_keep** (list, None) - list of column names which should be "
"added to 'cols_to_keep' to be kept while replacing gens."
msgstr ""

#: of pandapower.toolbox.replace_gen_by_sgen:2
msgid "Replaces generators by static generators."
msgstr ""

#: of pandapower.toolbox.replace_gen_by_sgen:10
msgid "**sgen_indices** (iterable) - required indices of new static generators"
msgstr ""

#: of pandapower.toolbox.replace_gen_by_sgen:12
msgid ""
"**cols_to_keep** (list, None) - list of column names which should be kept"
" while replacing gens. If None these columns are kept if values exist: "
"\"max_p_mw\", \"min_p_mw\", \"max_q_mvar\", \"min_q_mvar\". However "
"cols_to_keep is given, these columns are alway set: \"bus\", \"p_mw\", "
"\"q_mvar\", \"name\", \"in_service\", \"controllable\""
msgstr ""

#: of pandapower.toolbox.replace_sgen_by_gen:2
msgid "Replaces static generators by generators."
msgstr ""

#: of pandapower.toolbox.replace_sgen_by_gen:8
msgid ""
"**sgens** (iterable) - indices of static generators which should be "
"replaced"
msgstr ""

#: of pandapower.toolbox.replace_sgen_by_gen:12
msgid ""
"**cols_to_keep** (list, None) - list of column names which should be kept"
" while replacing sgens. If None these columns are kept if values exist: "
"\"max_p_mw\", \"min_p_mw\", \"max_q_mvar\", \"min_q_mvar\". However "
"cols_to_keep is given, these columns are alway set: \"bus\", \"vm_pu\", "
"\"p_mw\", \"name\", \"in_service\", \"controllable\""
msgstr ""

#: of pandapower.toolbox.replace_sgen_by_gen:17
msgid ""
"**add_cols_to_keep** (list, None) - list of column names which should be "
"added to 'cols_to_keep' to be kept while replacing sgens."
msgstr ""

#: ../../source/toolbox.rst:126
msgid "Item/Element Selection"
msgstr ""

#: of pandapower.toolbox.get_element_index:2
msgid ""
"Returns the element(s) identified by a name or regex and its element-"
"table."
msgstr ""

#: of pandapower.toolbox.get_element_index:7
msgid ""
"**element** - Table to get indices from (\"line\", \"bus\", \"trafo\" "
"etc.)"
msgstr ""

#: of pandapower.toolbox.get_element_index:9
msgid "**name** - Name of the element to match."
msgstr ""

#: of pandapower.toolbox.get_element_index:14
#: pandapower.toolbox.get_element_indices:16
msgid "**exact_match** (boolean, True) - True: Expects exactly one match, raises"
msgstr ""

#: of pandapower.toolbox.get_element_index:13
#: pandapower.toolbox.get_element_indices:15
msgid "UserWarning otherwise."
msgstr ""

#: of pandapower.toolbox.get_element_index:14
#: pandapower.toolbox.get_element_indices:16
msgid "False: returns all indices containing the name"
msgstr ""

#: of pandapower.toolbox.get_element_index:17
msgid "**index** - The indices of matching element(s)."
msgstr ""

#: of pandapower.toolbox.get_element_indices:2
msgid ""
"Returns a list of element(s) identified by a name or regex and its "
"element-table -> Wrapper function of get_element_index()"
msgstr ""

#: of pandapower.toolbox.get_element_indices:9
msgid ""
"**element** (str or iterable of strings) - Element table to get indices "
"from (\"line\", \"bus\","
msgstr ""

#: of pandapower.toolbox.get_element_indices:9
msgid "\"trafo\" etc.)"
msgstr ""

#: of pandapower.toolbox.get_element_indices:11
msgid "**name** (str or iterable of strings) - Name of the element to match."
msgstr ""

#: of pandapower.toolbox.get_element_indices:19
msgid "**index** (list) - List of the indices of matching element(s)."
msgstr ""

#: of pandapower.toolbox.get_element_indices:22
#, python-format
msgid ""
"import pandapower.networks as pn import pandapower as pp net = "
"pn.example_multivoltage() idx1 = pp.get_element_indices(net, \"bus\", "
"[\"Bus HV%i\" % i for i in range(1, 4)]) idx2 = "
"pp.get_element_indices(net, [\"bus\", \"line\"], \"HV\", "
"exact_match=False) idx3 = pp.get_element_indices(net, [\"bus\", "
"\"line\"], [\"Bus HV3\", \"MV Line6\"])"
msgstr ""

#: of pandapower.toolbox.next_bus:2
msgid ""
"Returns the index of the second bus an element is connected to, given a "
"first one. E.g. the from_bus given the to_bus of a line."
msgstr ""

#: of pandapower.toolbox.get_connected_elements:2
msgid "Returns elements connected to a given bus."
msgstr ""

#: of pandapower.toolbox.get_connected_buses:5
#: pandapower.toolbox.get_connected_buses_at_element:6
#: pandapower.toolbox.get_connected_elements:5
#: pandapower.toolbox.get_connected_switches:5
msgid "**net** (pandapowerNet)"
msgstr ""

#: of pandapower.toolbox.get_connected_elements:7
msgid "**element** (string, name of the element table)"
msgstr ""

#: of pandapower.toolbox.get_connected_buses:7
#: pandapower.toolbox.get_connected_elements:9
#: pandapower.toolbox.get_connected_switches:7
msgid "**buses** (single integer or iterable of ints)"
msgstr ""

#: of pandapower.toolbox.get_connected_elements:12
msgid ""
"**respect_switches** (boolean, True)    - True: open switches will be "
"respected"
msgstr ""

#: of pandapower.toolbox.get_connected_buses:11
#: pandapower.toolbox.get_connected_elements:13
msgid "False: open switches will be ignored"
msgstr ""

#: of pandapower.toolbox.get_connected_elements:15
msgid ""
"**respect_in_service** (boolean, False) - True: in_service status of "
"connected lines will be"
msgstr ""

#: of pandapower.toolbox.get_connected_elements:15
msgid "respected"
msgstr ""

#: of pandapower.toolbox.get_connected_buses_at_element:18
#: pandapower.toolbox.get_connected_elements:16
msgid "False: in_service status will be ignored"
msgstr ""

#: of pandapower.toolbox.get_connected_elements:18
msgid "**connected_elements** (set) - Returns connected elements."
msgstr ""

#: of pandapower.toolbox.get_connected_buses:2
msgid ""
"Returns buses connected to given buses. The source buses will NOT be "
"returned."
msgstr ""

#: of pandapower.toolbox.get_connected_buses:10
msgid ""
"**respect_switches** (boolean, True)        - True: open switches will be"
" respected"
msgstr ""

#: of pandapower.toolbox.get_connected_buses:14
#: pandapower.toolbox.get_connected_buses_at_element:17
msgid ""
"**respect_in_service** (boolean, False)     - True: in_service status of "
"connected buses"
msgstr ""

#: of pandapower.toolbox.get_connected_buses:13
msgid "will be respected False: in_service status will be ignored"
msgstr ""

#: of pandapower.toolbox.get_connected_buses:21
msgid ""
"**consider** (iterable, (\"l\", \"s\", \"t\"))    - Determines, which "
"types of connections will"
msgstr ""

#: of pandapower.toolbox.get_connected_buses:17
msgid ""
"be will be considered. l: lines s: switches t: trafos t3: trafo3ws i: "
"impedances"
msgstr ""

#: of pandapower.toolbox.get_connected_buses:24
msgid "**cl** (set) - Returns connected buses."
msgstr ""

#: of pandapower.toolbox.get_connected_buses_at_element:2
msgid ""
"Returns buses connected to a given line, switch or trafo. In case of a "
"bus switch, two buses will be returned, else one."
msgstr ""

#: of pandapower.toolbox.get_connected_buses_at_element:8
msgid "**element** (integer)"
msgstr ""

#: of pandapower.toolbox.get_connected_buses_at_element:13
msgid "**et** (string)                             - Type of the source element:"
msgstr ""

#: of pandapower.toolbox.get_connected_buses_at_element:11
msgid "l: line s: switch t: trafo"
msgstr ""

#: of pandapower.toolbox.get_connected_buses_at_element:17
msgid "will be respected"
msgstr ""

#: of pandapower.toolbox.get_connected_buses_at_element:20
#: pandapower.toolbox.get_connected_switches:19
msgid "**cl** (set) - Returns connected switches."
msgstr ""

#: of pandapower.toolbox.get_connected_switches:2
msgid "Returns switches connected to given buses."
msgstr ""

#: of pandapower.toolbox.get_connected_switches:14
msgid ""
"**consider** (iterable, (\"l\", \"s\", \"t\"))    - Determines, which "
"types of connections"
msgstr ""

#: of pandapower.toolbox.get_connected_switches:11
msgid "will be considered. l: lines b: bus-bus-switches t: trafos"
msgstr ""

#: of pandapower.toolbox.get_connected_switches:16
msgid ""
"**status** (string, (\"all\", \"closed\", \"open\"))    - Determines, "
"which switches will"
msgstr ""

#: of pandapower.toolbox.get_connected_switches:17
msgid "be considered"
msgstr ""

#: of pandapower.toolbox.get_connected_elements_dict:2
msgid "Returns a dict of lists of connected elements."
msgstr ""

