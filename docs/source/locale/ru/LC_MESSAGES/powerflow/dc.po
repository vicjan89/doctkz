# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2020 by Fraunhofer IEE and University of Kassel
# This file is distributed under the same license as the pandapower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandapower 2.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-09 17:13+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/powerflow/dc.rst:2
msgid "DC Power flow"
msgstr ""

#: ../../source/powerflow/dc.rst:6
msgid ""
"To run an AC power flow with DC power flow initialization, use the AC "
"power flow with init=\"dc\"."
msgstr ""

#: ../../source/powerflow/dc.rst:8
msgid "pandapower uses PYPOWER to solve the DC power flow problem:"
msgstr ""

#: of pandapower.run.rundcpp:2
msgid "Runs PANDAPOWER DC Flow"
msgstr ""

#: of pandapower.run.rundcpp:5
msgid "INPUT:"
msgstr ""

#: of pandapower.run.rundcpp:5
msgid "**net** - The pandapower format network"
msgstr ""

#: of pandapower.run.rundcpp:44
msgid "OPTIONAL:"
msgstr ""

#: of pandapower.run.rundcpp:8
msgid ""
"**trafo_model** (str, \"t\")  - transformer equivalent circuit model "
"pandapower provides two equivalent circuit models for the transformer:"
msgstr ""

#: of pandapower.run.rundcpp:11
msgid ""
"\"t\" - transformer is modeled as equivalent with the T-model. This is "
"consistent with PowerFactory and is also more accurate than the PI-model."
" We recommend using this transformer model."
msgstr ""

#: of pandapower.run.rundcpp:12
msgid ""
"\"pi\" - transformer is modeled as equivalent PI-model. This is "
"consistent with Sincal, but the method is questionable since the "
"transformer is physically T-shaped. We therefore recommend the use of the"
" T-model."
msgstr ""

#: of pandapower.run.rundcpp:14
msgid ""
"**trafo_loading** (str, \"current\") - mode of calculation for "
"transformer loading"
msgstr ""

#: of pandapower.run.rundcpp:16
msgid ""
"Transformer loading can be calculated relative to the rated current or "
"the rated power. In both cases the overall transformer loading is defined"
" as the maximum loading on the two sides of the transformer."
msgstr ""

#: of pandapower.run.rundcpp:18
msgid ""
"\"current\"- transformer loading is given as ratio of current flow and "
"rated current of the transformer. This is the recommended setting, since "
"thermal as well as magnetic effects in the transformer depend on the "
"current."
msgstr ""

#: of pandapower.run.rundcpp:19
msgid ""
"\"power\" - transformer loading is given as ratio of apparent power flow "
"to the rated apparent power of the transformer."
msgstr ""

#: of pandapower.run.rundcpp:21
msgid ""
"**check_connectivity** (bool, False) - Perform an extra connectivity test"
" after the conversion from pandapower to PYPOWER"
msgstr ""

#: of pandapower.run.rundcpp:23
msgid ""
"If true, an extra connectivity test based on SciPy Compressed Sparse "
"Graph Routines is perfomed. If check finds unsupplied buses, they are put"
" out of service in the PYPOWER matrix"
msgstr ""

#: of pandapower.run.rundcpp:26
msgid ""
"**switch_rx_ratio** (float, 2) - rx_ratio of bus-bus-switches. If "
"impedance is zero, buses connected by a closed bus-bus switch are fused "
"to model an ideal bus. Otherwise, they are modelled as branches with "
"resistance defined as z_ohm column in switch table and this parameter"
msgstr ""

#: of pandapower.run.rundcpp:28
msgid ""
"**trafo3w_losses** (str, \"hv\") - defines where open loop losses of "
"three-winding transformers are considered. Valid options are \"hv\", "
"\"mv\", \"lv\" for HV/MV/LV side or \"star\" for the star point."
msgstr ""

#: of pandapower.run.rundcpp:30
msgid "****kwargs** - options to use for PYPOWER.runpf"
msgstr ""

#: ../../source/powerflow/dc.rst:19
msgid ""
"If you are interested in the pypower casefile that pandapower is using "
"for power flow, you can find it in net[\"_ppc\"]. However all necessary "
"informations are written into the pandpower format net, so the pandapower"
" user should not usually have to deal with pypower."
msgstr ""

