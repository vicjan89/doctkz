# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2020 by Fraunhofer IEE and University of Kassel
# This file is distributed under the same license as the pandapower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandapower 2.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-09 17:13+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/plotting/plotly/built-in_plots.rst:3
msgid "Built-in plot functions"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:5
msgid ""
"In order to get idea about interactive plot features and possibilities "
"see the `tutorial "
"<http://nbviewer.jupyter.org/github/e2nIEE/pandapower/blob/develop/tutorials"
"/plotly_built-in.ipynb>`_."
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:9
msgid "Simple Plotting"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:11
msgid ""
"The function simple_plotly() can be used for a simple interactive "
"plotting."
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:2
msgid ""
"Plots a pandapower network as simple as possible in plotly. If no geodata"
" is available, artificial geodata is generated. For advanced plotting see"
" the tutorial"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:8
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:7
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:9
msgid "INPUT:"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:7
msgid ""
"**net** - The pandapower format network. If none is provided, "
"mv_oberrhein() will be"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:7
msgid "plotted as an example"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:49
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:48
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:42
msgid "OPTIONAL:"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:10
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:12
msgid ""
"**respect_switches** (bool, True) - Respect switches when artificial "
"geodata is created"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:13
msgid ""
"*use_line_geodata** (bool, True) - defines if lines patches are based on "
"net.line_geodata of the lines (True)"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:13
msgid "or on net.bus_geodata of the connected buses (False)"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:16
msgid "**on_map** (bool, False) - enables using mapbox plot in plotly."
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:16
msgid ""
"If provided geodata are not real geo-coordinates in lon/lat form, on_map "
"will be set to False."
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:19
msgid ""
"**projection** (String, None) - defines a projection from which network "
"geo-data will be transformed to"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:19
msgid ""
"lat-long. For each projection a string can be found at "
"http://spatialreference.org/ref/epsg/"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:24
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:21
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:27
msgid "**map_style** (str, 'basic') - enables using mapbox plot in plotly"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:26
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:23
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:29
msgid "'streets'"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:27
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:24
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:30
msgid "'bright'"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:28
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:25
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:31
msgid "'light'"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:29
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:26
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:32
msgid "'dark'"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:30
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:27
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:33
msgid "'satellite'"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:32
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:29
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:35
msgid ""
"**figsize** (float, 1) - aspectratio is multiplied by it in order to get "
"final image size"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:32
msgid ""
"**aspectratio** (tuple, 'auto') - when 'auto' it preserves original "
"aspect ratio of the network geodata;"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:32
msgid "any custom aspectration can be given as a tuple, e.g. (1.2, 1)"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:37
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:34
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:40
msgid "**line_width** (float, 1.0) - width of lines"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:39
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:36
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:42
msgid "**bus_size** (float, 10.0) -  size of buses to plot."
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:38
msgid "**ext_grid_size** (float, 20.0) - size of ext_grids to plot."
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:40
msgid "See bus sizes for details. Note: ext_grids are plotted as rectangles"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:42
msgid ""
"**bus_color** (String, \"blue\") - Bus Color. Init as first value of "
"color palette."
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:44
msgid "**line_color** (String, 'grey') - Line Color. Init is grey"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:46
msgid "**trafo_color** (String, 'green') - Trafo Color. Init is green"
msgstr ""

#: of pandapower.plotting.plotly.simple_plotly.simple_plotly:48
msgid ""
"**ext_grid_color** (String, 'yellow') - External Grid Color. Init is "
"yellow"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:66
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:65
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:59
msgid "OUTPUT:"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:52
#: pandapower.plotting.plotly.simple_plotly.simple_plotly:51
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:45
msgid "**figure** (graph_objs._figure.Figure) figure object"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:17
msgid ""
"Example plot with mv_oberrhein network from the pandapower.networks "
"package:"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:24
msgid "Example simple plot ::"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:36
msgid "Example simple plot on a map::"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:49
msgid "Network coloring according to voltage levels"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:51
msgid ""
"The function vlevel_plotly() is used to plot a network colored and "
"labeled according to voltage levels."
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:2
msgid ""
"Plots a pandapower network in plotly using lines/buses colors according "
"to the voltage level they belong to. If no geodata is available, "
"artificial geodata is generated. For advanced plotting see the tutorial"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:7
#: pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:8
msgid ""
"**net** - The pandapower format network. If none is provided, "
"mv_oberrhein() will be plotted as an example"
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:15
msgid ""
"**use_line_geodata** (bool, True) - defines if lines patches are based on"
" net.line_geodata"
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:15
msgid "of the lines (True) or on net.bus_geodata of the connected buses (False)"
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:18
msgid ""
"*colors_dict** (dict, None) - dictionary for customization of colors for "
"each voltage level"
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:18
msgid "in the form: voltage : color"
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:21
msgid ""
"**on_map** (bool, False) - enables using mapbox plot in plotly If "
"provided geodata are not"
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:21
msgid "real geo-coordinates in lon/lat form, on_map will be set to False."
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:25
msgid ""
"**projection** (String, None) - defines a projection from which network "
"geo-data will be"
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:24
msgid ""
"transformed to lat-long. For each projection a string can be found at "
"http://spatialreference.org/ref/epsg/"
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:38
msgid ""
"**aspectratio** (tuple, 'auto') - when 'auto' it preserves original "
"aspect ratio of the"
msgstr ""

#: of pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly:38
msgid ""
"network geodata any custom aspectration can be given as a tuple, e.g. "
"(1.2, 1)"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:57
msgid ""
"Example plot with mv_oberrhein network from the pandapower.networks "
"package::"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:71
msgid "Power Flow results"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:73
msgid ""
"The function pf_res_plotly() is used to plot a network according to power"
" flow results where a colormap is used to represent line loading and "
"voltage magnitudes. For advanced possibilities see the tutorials."
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:2
msgid ""
"Plots a pandapower network in plotly using colormap for coloring lines "
"according to line loading and buses according to voltage in p.u. If no "
"geodata is available, artificial geodata is generated. For advanced "
"plotting see the tutorial"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:11
msgid ""
"**respect_switches** (bool, False) - Respect switches when artificial "
"geodata is created"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:13
msgid "*cmap** (str, True) - name of the colormap"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:15
msgid ""
"*colors_dict** (dict, None) - by default 6 basic colors from default "
"collor palette is used. Otherwise, user can define a dictionary in the "
"form: voltage_kv : color"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:18
msgid ""
"**on_map** (bool, False) - enables using mapbox plot in plotly If "
"provided geodata are not real geo-coordinates in lon/lat form, on_map "
"will be set to False."
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:21
msgid ""
"**projection** (String, None) - defines a projection from which network "
"geo-data will be transformed to lat-long. For each projection a string "
"can be found at http://spatialreference.org/ref/epsg/"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:34
msgid ""
"**aspectratio** (tuple, 'auto') - when 'auto' it preserves original "
"aspect ratio of the network geodata any custom aspectration can be given "
"as a tuple, e.g. (1.2, 1)"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:41
msgid "**climits_volt** (tuple, (0.9, 1.0)) - limits of the colorbar for voltage"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:43
msgid ""
"**climits_load** (tuple, (0, 100)) - limits of the colorbar for "
"line_loading"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:45
msgid "**cpos_volt** (float, 1.0) - position of the bus voltage colorbar"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:47
msgid "**cpos_load** (float, 1.1) - position of the loading percent colorbar"
msgstr ""

#: of pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly:49
msgid ""
"**filename** (str, \"temp-plot.html\") - filename / path to plot to. "
"Should end on *.html"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:79
msgid "Example power flow results plot::"
msgstr ""

#: ../../source/plotting/plotly/built-in_plots.rst:91
msgid "Power flow results on a map::"
msgstr ""

