# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2020 by Fraunhofer IEE and University of Kassel
# This file is distributed under the same license as the pandapower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandapower 2.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-09 17:13+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/control/run.rst:3
msgid "Running a Simulation"
msgstr ""

#: ../../source/control/run.rst:5
msgid ""
"To run a simulation, simply initialize one or multiple controllers (see "
"ref to controllers). An overview of all controllers registered in the net"
" is given in the controller table:"
msgstr ""

#: ../../source/control/run.rst:11
msgid "Then, run a power flow with the run_control option set to true:"
msgstr ""

#: ../../source/control/run.rst:18
msgid ""
"The runpp function will now run multiple power flow calculations until "
"all registered controllers are converged."
msgstr ""

#: ../../source/control/run.rst:20
msgid ""
"Instead of calling runpp it is also possible to call run_control from the"
" control module directly:"
msgstr ""

#: ../../source/control/run.rst:29
msgid ""
"By default, this will do the same as runpp with run_control=True. Calling"
" the run_control function however gives you more flexibility to "
"configurate the controller loop simulation."
msgstr ""

#: of pandapower.control.run_control.run_control:2
msgid ""
"Main function to call a net with controllers Function is running control "
"loops for the controllers specified in net.controller"
msgstr ""

#: of pandapower.control.run_control.run_control:5
msgid "INPUT:"
msgstr ""

#: of pandapower.control.run_control.run_control:6
msgid "**net** - pandapower network with controllers included in net.controller"
msgstr ""

#: of pandapower.control.run_control.run_control:10
msgid "OPTIONAL:"
msgstr ""

#: of pandapower.control.run_control.run_control:9
msgid ""
"**ctrl_variables** (dict, None) - variables needed internally to "
"calculate the power flow. See prepare_run_ctrl() **max_iter** (int, 30) -"
" The maximum number of iterations for controller to converge"
msgstr ""

#: of pandapower.control.run_control.run_control:12
msgid "Runs controller until each one converged or max_iter is hit."
msgstr ""

#: of pandapower.control.run_control.run_control:14
msgid "Call initialize_control() on each controller"
msgstr ""

#: of pandapower.control.run_control.run_control:15
msgid ""
"Calculate an inital power flow (if it is enabled, i.e. setting the "
"initial_run veriable to True)"
msgstr ""

#: of pandapower.control.run_control.run_control:16
msgid ""
"Repeats the following steps in ascending order of controller_order until "
"total convergence of all controllers for each level:"
msgstr ""

#: of pandapower.control.run_control.run_control:18
msgid "Evaluate individual convergence for all controllers in the level"
msgstr ""

#: of pandapower.control.run_control.run_control:19
msgid ""
"Call control_step() for all controllers in the level on diverged "
"controllers"
msgstr ""

#: of pandapower.control.run_control.run_control:20
msgid ""
"Calculate power flow (or optionally another function like runopf or "
"whatever you defined)"
msgstr ""

#: of pandapower.control.run_control.run_control:21
msgid "Call finalize_control() on each controller"
msgstr ""

